buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:+'
        classpath 'com.jakewharton.hugo:hugo-plugin:+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'hugo'

repositories {
    mavenCentral()
    maven { url "http://maven.arcao.com/" }
}

dependencies {
    compile 'com.android.support:support-v4:20.+'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-collections4:4.0'
    compile 'com.squareup.dagger:dagger:1.+'
    compile 'com.squareup.okhttp:okhttp:2.+'
    compile 'com.squareup.picasso:picasso:2.+'
    compile 'com.jakewharton:butterknife:5.+'
    compile 'com.jakewharton.timber:timber:2.+'
    compile('com.arcao:geocaching-api:+') {
      exclude group: 'log4j', module: 'log4j' /* Not working in Android, log4j-over-slf4j used instead */
    }
    compile('oauth.signpost:signpost-commonshttp4:1.2.1.2') {
      exclude group: 'org.apache.httpcomponents', module: 'httpclient' /* already in Android */ 
      exclude group: 'commons-codec', module: 'commons-codec' /* already in Android */
    }
    compile 'org.slf4j:log4j-over-slf4j:1.7.7'
    compile 'com.arcao:slf4j-timber:+'
    compile('com.activeandroid:activeandroid:3.1-3') {
      exclude group: 'com.google.android', module: 'support-v4' // Used SDK bundled artifact instead
    }
    compile 'com.github.gabrielemariotti.cards:library:1.+'
    compile 'com.squareup:otto:1.3.5'

    provided 'com.squareup.dagger:dagger-compiler:1.+'
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
def gitVersionCode = 'git rev-list --count HEAD'.execute([], project.rootDir).text.trim().toInteger();

def isTravis = "true".equals(System.getenv("TRAVIS"))
def preDexEnabled = "true".equals(System.getProperty("pre-dex", "true"))

// Geocaching API key default value
if (!project.hasProperty('geocachingApiKey')) {
    project.setProperty('geocachingApiKey', '')
}
if (!project.hasProperty('geocachingApiSecret')) {
    project.setProperty('geocachingApiSecret', '')
}
if (!project.hasProperty('geocachingApiStaging')) {
    project.setProperty('geocachingApiStaging', true)
}


android {
    compileSdkVersion 19
    buildToolsVersion "20"

    dexOptions {
      // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
      preDexLibraries = preDexEnabled && !isTravis
    }

    defaultConfig {
        versionCode gitVersionCode
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "GEOCACHING_API_KEY", "\"${geocachingApiKey}\""
        buildConfigField "String", "GEOCACHING_API_SECRET", "\"${geocachingApiSecret}\""
        buildConfigField "boolean", "GEOCACHING_API_STAGING", "${geocachingApiStaging}"
    }

    signingConfigs {
        release {
            keyAlias = "watchmytrackables"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }
        release {
            signingConfig signingConfigs.release
            runProguard true
            proguardFile getDefaultProguardFile('proguard-android.txt')
            proguardFile 'proguard.cfg'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        // removed because of conflict in creating package
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        // unused files, removed to minimize APK file
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'org/apache/http/version.properties'
        exclude 'templates/release-notes.vm'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'log4j.xml'
    }
}

if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = android.signingConfigs.debug
}